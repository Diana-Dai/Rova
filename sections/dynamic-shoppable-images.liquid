<section class="shoppable_images">
  {% assign title = section.settings.title %}

  {% if title != blank %}
    <div class="section--top">
      <h3 class="shoppable_images__title h2 text-center">{{ title | escape }}</h2>
    </div>
  {% endif %}

  <div class="shoppable_images_carousel_navigation">
    {% for block in section.blocks %}
    <div class="navigation button-primary {%if forloop.first %}is-selected{% endif %}" data-index="{{forloop.index0}}">
    {{block.settings.title}}
    </div>
    {% endfor %}
  </div>

  <div class="shoppable_images_carousel">
  {% for block in section.blocks %}
    <div class="shoppable-image__container">
    {% assign enable_text_box = true %}
    {% if block.settings.textbox_title == blank and block.settings.textbox_subheading == blank %}
      {% assign enable_text_box = false %}
    {% endif %}
    {% capture root_class %}
      shoppable-image-section
      {% unless block.settings.image_width == 'full' %}
        shoppable-image--text-position-{{ block.settings.textbox_text_position }}
      {% endunless %}
      {% if enable_text_box %}
        shoppable-image--{{ block.settings.image_width }}-width-image
      {% else %}
        shoppable-image--full-width-image
      {% endif %}
    {% endcapture %}
    {% assign background_image = block.settings.image %}
    {% assign tooltip_link_text = block.settings.link_text %}
    {% assign x_axis_id = 'x_axis' %}
    {% assign y_axis_id = 'y_axis' %}
    {% assign hotspot_product_id = 'product' %}
    {% assign show_tooltip_image = true %}
    {% assign show_vendor = settings.product_show_vendor %}
    {% assign show_compare_at_price = true %}
    {%- comment -%}
    {% assign show_sale_badge = settings.product_sales_badge %}
    
    {%- endcomment -%}
    {% assign show_sale_badge = false %}

    {% assign include_range = true %}
    {% assign show_range = true %}
    {% assign sales_badge_style = settings.product_sales_badge_style %}
    {% capture text_box_root_class %}
      text-box--align-{{ block.settings.textbox_text_alignment }}
    {% endcapture %}
    {% assign text_box_heading = block.settings.textbox_title %}
    {% assign text_box_subheading = block.settings.textbox_subheading %}
    {% assign text_box_button_label = block.settings.textbox_button_label %}
    {% assign text_box_button_link = block.settings.textbox_button_link %}
    {% capture text_box_button_class %}
      button-{{ block.settings.textbox_button_style }}
    {% endcapture %}
    
    
    {% if sales_badge_style == 'percentile' %}
      {% assign sales_badge_style = 'percentage' %}
    {% endif %}
    
    <script type="application/pxs-animation-mapping+json">
      {
        "blocks": [".shoppable-image"],
        "elements": [
          ".shoppable-image__hotspot",
          ".shoppable-image__text-box-title",
          ".shoppable-image__text-box-subheading",
          ".shoppable-image__text-box-button"
        ]
      }
    </script>
    
    {% comment %}Inject @pixelunion/pxs-shoppable-image/dynamic-shoppable-image begin{% endcomment %}
    {%- comment -%}
      @param section {Object}
        Section object
    
      @param root_class {String}
        Class applied to the top level section element
    
      @param title {String}
        Section title
    
      @param background_image {Image}
        Background image
    
      @param image_crop {String}
        Image crop setting
    
      @param tooltip_link_text {String}
        Text in the tooltip link
    
      @param x_axis_id {String}
        The block setting name for the horizontal position of hotspot
    
      @param y_axis_id {String}
        The block setting name for the vertical position of hotspot
    
      @param hotspot_product_id {String}
        The block setting name for the hotspot product
    
      @param show_tooltip_image {Bool}
        Show a product image in the tooltip
    
      @param show_vendor {Bool}
        Show the vendor name on the tooltip
    
      @param show_compare_at_price {Bool}
        Show the compare-at price on the tooltip
    
      @param show_sale_badge {Bool}
        Show sale badge on the tooltip
    
      @param enable_text_box {Bool}
        Show text content beside hotspot image
    
      @param text_box_root_class {String}
        Class applied to the text box wrapper
    
      @param text_box_heading {String}
        Heading in the text box component
    
      @param text_box_subheading {String}
        Subheading in the text box component
    
      @param text_box_button_label {String}
        Button label in text box component
    
      @param text_box_button_class {String}
        Class applied to the link/button in the text box component
    
      @param text_box_button_link {String}
        Link for button in text box component
    {%- endcomment -%}
    
    <script
      type="application/json"
      data-section-type="pxs-shoppable-image"
      data-section-id="{{ block.id }}"
    >
    </script>
    
    <div class="shoppable_image {{ root_class }} {% if title == blank %}no-section-heading{% endif %}" data-shoppable-image-container>

    
      {% if enable_text_box %}
        <div class="shoppable-image__section-content-wrapper">
      {% endif %}
      <div class="shoppable-image__wrapper" data-shoppable-image-wrapper>
        {% if background_image != blank %}
          {%
            include 'rimg',
            img: background_image,
            size: '1400x',
            class: 'shoppable-image__image',
            crop: 'center',
            lazy: true,
            canvas: true,
            attr: 'data-shoppable-image-img'
          %}
        {% else %}
          {{ 'lifestyle-1' | placeholder_svg_tag: 'shoppable-image__image shoppable-image__placeholder-image' }}
        {% endif %}
    
        {% assign hotspot_product_1 = all_products[block.settings.product_1] %}
        {% if hotspot_product_1 != empty %}
          <div
            class="shoppable-image__hotspot"
            style="
              left: {{ block.settings.x_axis_1 }}%;
              bottom: {{ block.settings.y_axis_1 }}%;
              visibility: hidden;
              "
            data-hotspot-x-axis="{{ block.settings.x_axis_1 }}"
            data-hotspot-y-axis="{{ block.settings.y_axis_1 }}"
            data-hotspot
            data-hotspot-product="{{ hotspot_product_1.id }}"
            aria-label="Product hotspot"
            tabindex=0
            {{ block.shopify_attributes }}
          >
            <div class="shoppable-image__hotspot-inner"></div>
            <div
              class="hotspot__tooltip-wrapper"
              data-tooltip-wrapper
              role="tooltip"
            >
              <a
                href="{{ hotspot_product_1.url }}"
                class="hotspot__tooltip"
                data-tooltip
                tabindex=0
              >
                {% if show_tooltip_image %}
                  <div class="hotspot__tooltip-image-wrapper">
                    {% if hotspot_product_1.featured_media.preview_image %}
                      {%
                        include 'rimg',
                        img: hotspot_product_1.featured_media.preview_image,
                        size: '800x',
                        class: 'tooltip__image',
                        crop: 'center',
                        lazy: true,
                        canvas: true
                      %}
                    {% else %}
                      {{ 'product-1' | placeholder_svg_tag: 'tooltip__image tooltip__placeholder-image' }}
                    {% endif %}
                  </div>
                {% endif %}
    
                <div class="hotspot__tooltip-content">
                  {% assign class_root = 'hotspot' %}
                  {% if show_sale_badge %}
                    <div class="hotspot__tooltip-sale">
                      {% assign product = hotspot_product_1 %}
                      {% assign sales_badge = true %}
                      {% comment %}Inject @pixelunion/shopify-price-ui/sale-badge begin{% endcomment %}
                      {% comment %}
                        @param product {Product}
                      
                        @param class_root {String}
                          Base class root
                      
                        @param price_varies {Boolean}
                          If true, the variant price varies
                      
                        @param compare_at_price_varies {Boolean}
                          If true, the variant compare price varies
                      
                        @param product_available {Boolean}
                      
                        @param on_sale {Boolean}
                          If a product, or one of it's variants is on sale
                      
                        @param sales_badge {Boolean}
                          False: Sold out badge only
                          True: Show sale badge
                      
                        @param sales_badge_style
                      
                        @param preorder_badge {Boolean}
                          If true, show the pre-order badge
                      
                        @param include_hidden_badge
                          Include a hidden element with sale data to use in cases of unavailable variants or cases where no variant
                          is selected by default
                      {% endcomment %}
                      
                      {% assign savings_money_range = 0 %}
                      {% assign savings_percentage_range = 0 %}
                      
                      {% assign price_min = nil %}
                      {% assign price_max = nil %}
                      {% assign compare_at_price_min = nil %}
                      {% assign compare_at_price_max = nil %}
                      {% assign price_varies = price_varies | default: false %}
                      {% assign compare_at_price_varies = compare_at_price_varies | default: false %}
                      
                      {% for variant in product.variants %}
                        {% if price_min == nil or variant.price < price_min %}
                          {% assign price_min = variant.price %}
                        {% endif %}
                        {% if price_max == nil or variant.price > price_max %}
                          {% assign price_max = variant.price %}
                        {% endif %}
                        {% assign tmp_compare_at_price = variant.compare_at_price %}
                        {% unless variant.compare_at_price %}
                          {% assign tmp_compare_at_price = variant.price %}
                        {% endunless %}
                        {% if compare_at_price_min == nil or tmp_compare_at_price < compare_at_price_min %}
                          {% assign compare_at_price_min = tmp_compare_at_price %}
                        {% endif %}
                        {% if compare_at_price_max == nil or tmp_compare_at_price > compare_at_price_max %}
                          {% assign compare_at_price_max = tmp_compare_at_price %}
                        {% endif %}
                      
                        {% assign price_difference = tmp_compare_at_price | minus: variant.price %}
                        {% if price_difference > savings_money_range %}
                          {% assign savings_money_range = price_difference %}
                          {% assign savings_percentage_range = savings_money_range | times: 1.0 | divided_by: variant.compare_at_price | times: 100.0 | round %}
                        {% endif %}
                      {% endfor %}
                      
                      {% assign savings_money_single = selected_variant.compare_at_price | minus: selected_variant.price %}
                      {% assign savings_percentage_single = savings_money_single | times: 1.0 | divided_by: selected_variant.compare_at_price | times: 100.0 | round %}
                      
                      {% assign product_available = product_available | default: product.available %}
                      
                      {%- if product_available != true -%}
                        <span class="{{ class_root }}__badge {{ class_root }}__badge--soldout">
                          {{ 'product_price.badge.sold_out' | t }}
                        </span>
                      {%- elsif on_sale and sales_badge -%}
                        {% assign on_sale = on_sale | default: true %}
                        {% assign saved_price_single = savings_money_single | money %}
                        {% assign saved_price_range = savings_money_range | money %}
                        {% if savings_money_range <= 0 %}
                          {% assign on_sale = false %}
                        {% endif %}
                      
                        <span class="{{ class_root }}__badge {{ class_root }}__badge--sale"
                          data-badge-sales
                          {% if on_sale != true %}style="display: none;"{% endif %}
                        >
                          <span data-badge-sales-range>
                            {% if sales_badge_style == 'percent' %}
                              {% if price_varies or compare_at_price_varies %}
                                {{ 'product_price.badge.sale_percentage_range_html' | t: savings: savings_percentage_range | strip_newlines }}
                              {% else %}
                                {{ 'product_price.badge.sale_percentage_single_html' | t: savings: savings_percentage_range | strip_newlines }}
                              {% endif %}
                            {% elsif sales_badge_style == 'money' %}
                              {% if price_varies or compare_at_price_varies %}
                                {{ 'product_price.badge.sale_money_range_html' | t: savings: saved_price_range | strip_newlines }}
                              {% else %}
                                {{ 'product_price.badge.sale_money_single_html' | t: savings: saved_price_range | strip_newlines }}
                              {% endif %}
                            {% else %}
                              {{ 'product_price.badge.sale' | t }}
                            {% endif %}
                          </span>
                          <span data-badge-sales-single style="display: none;">
                            {% if sales_badge_style == 'percent' %}
                              {{ 'product_price.badge.sale_percentage_single_html' | t: savings: savings_percentage_single | strip_newlines }}
                            {% elsif sales_badge_style == 'money' %}
                              {{ 'product_price.badge.sale_money_single_html' | t: savings: saved_price_single | strip_newlines }}
                            {% else %}
                              {{ 'product_price.badge.sale' | t }}
                            {% endif %}
                          </span>
                        </span>
                      {%- elsif preorder_badge -%}
                        <span class="{{ class_root }}__badge {{ class_root }}__badge--pre-order">
                          {{ 'product_price.badge.pre_order' | t }}
                        </span>
                      {%- endif -%}
                      {% comment %}Inject @pixelunion/shopify-price-ui/sale-badge end{% endcomment %}
    
                    </div>
                  {% endif %}
    
                  <div class="hotspot__tooltip-title">
                    {{ hotspot_product_1.title }}
                  </div>
    
                  {% if show_vendor %}
                    <div class="hotspot__tooltip-vendor">
                      {{ hotspot_product_1.vendor }}
                    </div>
                  {% endif %}
    
                  <div class="hotspot__tooltip-price">
                    {% assign product = hotspot_product_1 %}
                    {% assign selected_variant = product.selected_or_first_available_variant %}
                    {% assign compare_at_price = selected_variant.compare_at_price %}
                    {% assign price = selected_variant.price %}
    
                    {% comment %}Inject @pixelunion/shopify-price-ui/price begin{% endcomment %}
                    {% comment %}
                      @param class_root {String}
                        Base class root
                    
                      @param show_range {Bool}
                        Show price range
                    
                      @param price_varies {Boolean}
                        If true, the variant price varies
                    
                      @param compare_at_price_varies {Boolean}
                        If true, the variant compare price varies
                    
                      @param price_range_format {String}
                          'range' or 'from', defaults to 'range'
                    
                      @param product {Product}
                          Product to reference for price
                    
                      @param on_sale {Bool}
                        If a product, or one of it's variants is on sale
                    
                      @param emphasize_price {Bool}
                        Used in product grid item to add placeholder space
                    
                      @param show_original {Bool}
                        Show original price if is consistent across all variants
                    
                      @param show_savings {Bool}
                        Line of text indicating maximum savings on sale items (ex. "Save up to 20%")
                    
                      @param savings_format {String}
                        Percentage or money for show_savings line
                    
                      @param include_spacer {Bool}
                        Include a spacer div above the price when emphasize price is enabled and there is no 'compare-at' price
                    
                      @param include_unit_price
                        Include the unit price line
                    
                      @param include_tax_line
                        Include tax line
                    
                      @param include_hidden_price
                        Include a hidden element with price data to use in cases of unavailable variants or cases where no variant
                        is selected by default
                    
                      @param include_compare_price
                        Show compare at price
                    {% endcomment %}
                    
                    {% assign price_min = nil %}
                    {% assign price_max = nil %}
                    {% assign compare_at_price_min = nil %}
                    {% assign compare_at_price_max = nil %}
                    {% assign price_varies = price_varies | default: false %}
                    {% assign compare_at_price_varies = compare_at_price_varies | default: false %}
                    
                    {% for variant in product.variants %}
                      {% if price_min == nil or variant.price < price_min %}
                        {% assign price_min = variant.price %}
                      {% endif %}
                      {% if price_max == nil or variant.price > price_max %}
                        {% assign price_max = variant.price %}
                      {% endif %}
                      {% assign tmp_compare_at_price = variant.compare_at_price %}
                      {% unless variant.compare_at_price %}
                        {% assign tmp_compare_at_price = variant.price %}
                      {% endunless %}
                      {% if compare_at_price_min == nil or tmp_compare_at_price < compare_at_price_min %}
                        {% assign compare_at_price_min = tmp_compare_at_price %}
                      {% endif %}
                      {% if compare_at_price_max == nil or tmp_compare_at_price > compare_at_price_max %}
                        {% assign compare_at_price_max = tmp_compare_at_price %}
                      {% endif %}
                    {% endfor %}
                    
                    {% assign show_range = show_range | default: false %}
                    {% assign price = price | default: product.price %}
                    {% assign compare_at_price = compare_at_price | default: product.compare_at_price %}
                    {% assign variants = product.variants %}
                    {% assign price_range_format = price_range_format | default: 'range' %}
                    {% assign savings_format = savings_format | default: 'percentage' %}
                    {% assign on_sale = on_sale | default: false %}
                    {% assign emphasize_price = emphasize_price | default: false %}
                    {% assign show_original = show_original | default: false %}
                    {% assign show_savings = show_savings | default: false %}
                    {% assign class_root = class_root | default: 'product' %}
                    {% assign include_spacer = include_spacer | default: false %}
                    {% assign include_unit_price = include_unit_price | default: false %}
                    {% assign include_tax_line = include_tax_line | default: false %}
                    {% assign include_compare_price = include_compare_price | default: true %}
                    
                    <div class="price {{ class_root }}__price {% if compare_at_price_varies %}price--varies{% endif %}">
                      {% if include_compare_price %}
                        <div
                          class="price__compare-at {% if emphasize_price or on_sale and show_original %}visible{% endif %}"
                          data-price-compare-container
                        >
                          {%- capture compare_at_price_html -%}
                            <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                            <span class="money price__compare-at--single" data-price-compare>
                              {{ compare_at_price | money }}
                            </span>
                          {%- endcapture -%}
                    
                          {% if compare_at_price_varies %}
                            {%- capture compare_at_price_range_html -%}
                              {% if price_range_format == 'range' %}
                                <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                                <span class="money price__compare-at--min" data-price-compare-min>
                                  {{ compare_at_price_min | money }}
                                </span>
                                -
                                <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                                <span class="money price__compare-at--max" data-price-compare-max>
                                  {{ compare_at_price_max | money }}
                                </span>
                              {% else %}
                                {{ 'product_price.item.price.range_html' | t: price: compare_at_price_html | strip_newlines }}
                              {% endif %}
                            {% endcapture %}
                          {% endif %}
                    
                          {% if compare_at_price_varies and on_sale and show_original and show_range %}
                            {{ compare_at_price_range_html }}
                          {% elsif on_sale and show_original %}
                            {{ compare_at_price_html }}
                          {% elsif emphasize_price and include_spacer %}
                            <span class="price__spacer"></span>
                          {% elsif show_original %}
                            <span class="money price__original" data-price-original></span>
                          {% endif %}
                        </div>
                    
                    
                        {% if include_hidden_price %}
                          {% comment %}
                            Hide an element containing compare at price info to fill in the price when no variant is selected
                          {% endcomment %}
                          <div class="price__compare-at--hidden" data-compare-price-range-hidden>
                            {% if price_range_format == 'range' %}
                              <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                              <span class="money price__compare-at--min" data-price-compare-min>
                                {{ compare_at_price_min | money }}
                              </span>
                              -
                              <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                              <span class="money price__compare-at--max" data-price-compare-max>
                                {{ compare_at_price_max | money }}
                              </span>
                            {% else %}
                              {{ 'product_price.item.price.range_html' | t: price: compare_at_price_html | strip_newlines }}
                            {% endif %}
                          </div>
                          <div class="price__compare-at--hidden" data-compare-price-hidden>
                            <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                            <span class="money price__compare-at--single" data-price-compare>
                              {{ compare_at_price | money }}
                            </span>
                          </div>
                        {% endif %}
                      {% endif %}
                    
                      <div class="price__current {% if emphasize_price %}price__current--emphasize{% endif %} {% if on_sale %}price__current--on-sale{% endif %}" data-price-container>
                        {%- capture price_html -%}
                          <span class="money" data-price>
                            {{ price | money }}
                          </span>
                        {%- endcapture -%}
                    
                        {% capture current_price_range_html %}
                          {% if price_varies %}
                            {% if price_range_format == 'range' %}
                              <span class="money price__current--min" data-price-min>{{ price_min | money}}</span>
                              -
                              <span class="money price__current--max" data-price-max>{{ price_max | money }}</span>
                            {% else %}
                              {{ 'product_price.price.range_html' | t: price: price_html | strip_newlines }}
                            {% endif %}
                          {% endif %}
                        {% endcapture %}
                    
                        {% capture current_price_html %}
                          {% if on_sale and show_original %}
                            <span class="visually-hidden">{{ 'product_price.price.current' | t }}</span>
                          {% endif %}
                          {{ price_html }}
                        {% endcapture %}
                    
                        {% if show_range and price_varies %}
                          {{ current_price_range_html }}
                        {% else %}
                          {{ current_price_html }}
                        {% endif %}
                      </div>
                    
                      {% if include_hidden_price %}
                        {% comment %}
                          Hide an element containing current price info to fill in the price when no variant is selected
                        {% endcomment %}
                        <div class="price__current--hidden" data-current-price-range-hidden>
                          {% if price_range_format == 'range' %}
                            <span class="money price__current--min" data-price-min>{{ price_min | money}}</span>
                            -
                            <span class="money price__current--max" data-price-max>{{ price_max | money }}</span>
                          {% else %}
                            {{ 'product_price.price.range_html' | t: price: price_html | strip_newlines }}
                          {% endif %}
                        </div>
                        <div class="price__current--hidden" data-current-price-hidden>
                          <span class="visually-hidden">{{ 'product_price.price.current' | t }}</span>
                          {{ price_html }}
                        </div>
                      {% endif %}
                    
                      {% if include_unit_price %}
                        {% assign variant = product.selected_or_first_available_variant %}
                        {% capture total_quantity %}<span class="{{ class_root }}__total-quantity" data-total-quantity>{{ variant.unit_price_measurement.quantity_value }}{{ variant.unit_price_measurement.quantity_unit }}</span>{% endcapture %}
                        {% capture unit_price %}<span class="{{ class_root }}__unit-price--amount money" data-unit-price-amount>{{ variant.unit_price | money }}</span>{% endcapture %}
                        {% capture unit_measure %}<span class="{{ class_root }}__unit-price--measure" data-unit-price-measure>{%- if variant.unit_price_measurement.reference_value != 1 -%}{{ variant.unit_price_measurement.reference_value }}{%- endif %}{{ variant.unit_price_measurement.reference_unit }}</span>{% endcapture %}
                    
                        <div
                          class="
                            {{ class_root }}__unit-price
                            {% unless variant.unit_price_measurement %}hidden{% endunless %}
                          "
                          data-unit-price
                        >
                          {{ 'product_price.price.price_per_unit_html' | t: total_quantity: total_quantity, unit_price: unit_price, unit_measure: unit_measure | strip_newlines }}
                        </div>
                      {% endif %}
                    
                      {% if include_tax_line %}
                        {%- capture tax_text -%}
                          {{ 'product_price.price.tax_line_html' | t }}
                        {%- endcapture -%}
                    
                        {%- if tax_text != blank and class_root != 'productitem' -%}
                          <div class="
                              {{ class_root }}__tax
                              {% unless variant.taxable %}hidden{% endunless %}
                            "
                            data-tax-line
                          >
                            {{ tax_text }}
                          </div>
                        {%- endif -%}
                      {% endif %}
                    </div>
                    {% comment %}Inject @pixelunion/shopify-price-ui/price end{% endcomment %}
    
                  </div>
    
                  {% if tooltip_link_text != blank %}
                    <div class="hotspot__tooltip-link">
                      {{ tooltip_link_text }}
                    </div>
                  {% endif %}
                </div>
              </a>
            </div>
          </div>
        {% endif %}
    
        {% assign hotspot_product_2 = all_products[block.settings.product_2] %}
    {% if hotspot_product_2 != empty %}
      <div
        class="shoppable-image__hotspot"
        style="
          left: {{ block.settings.x_axis_2 }}%;
          bottom: {{ block.settings.y_axis_2 }}%;
          visibility: hidden;
          "
        data-hotspot-x-axis="{{ block.settings.x_axis_2 }}"
        data-hotspot-y-axis="{{ block.settings.y_axis_2 }}"
        data-hotspot
        data-hotspot-product="{{ hotspot_product_2.id }}"
        aria-label="Product hotspot"
        tabindex=0
        {{ block.shopify_attributes }}
      >
        <div class="shoppable-image__hotspot-inner"></div>
        <div
          class="hotspot__tooltip-wrapper"
          data-tooltip-wrapper
          role="tooltip"
        >
          <a
            href="{{ hotspot_product_2.url }}"
            class="hotspot__tooltip"
            data-tooltip
            tabindex=0
          >
            {% if show_tooltip_image %}
              <div class="hotspot__tooltip-image-wrapper">
                {% if hotspot_product_2.featured_media.preview_image %}
                  {%
                    include 'rimg',
                    img: hotspot_product_2.featured_media.preview_image,
                    size: '800x',
                    class: 'tooltip__image',
                    crop: 'center',
                    lazy: true,
                    canvas: true
                  %}
                {% else %}
                  {{ 'product-1' | placeholder_svg_tag: 'tooltip__image tooltip__placeholder-image' }}
                {% endif %}
              </div>
            {% endif %}
    
            <div class="hotspot__tooltip-content">
              {% assign class_root = 'hotspot' %}
              {% if show_sale_badge %}
                <div class="hotspot__tooltip-sale">
                  {% assign product = hotspot_product_2 %}
                  {% assign sales_badge = true %}
                  {% comment %}Inject @pixelunion/shopify-price-ui/sale-badge begin{% endcomment %}
                  {% comment %}
                    @param product {Product}
                  
                    @param class_root {String}
                      Base class root
                  
                    @param price_varies {Boolean}
                      If true, the variant price varies
                  
                    @param compare_at_price_varies {Boolean}
                      If true, the variant compare price varies
                  
                    @param product_available {Boolean}
                  
                    @param on_sale {Boolean}
                      If a product, or one of it's variants is on sale
                  
                    @param sales_badge {Boolean}
                      False: Sold out badge only
                      True: Show sale badge
                  
                    @param sales_badge_style
                  
                    @param preorder_badge {Boolean}
                      If true, show the pre-order badge
                  
                    @param include_hidden_badge
                      Include a hidden element with sale data to use in cases of unavailable variants or cases where no variant
                      is selected by default
                  {% endcomment %}
                  
                  {% assign savings_money_range = 0 %}
                  {% assign savings_percentage_range = 0 %}
                  
                  {% assign price_min = nil %}
                  {% assign price_max = nil %}
                  {% assign compare_at_price_min = nil %}
                  {% assign compare_at_price_max = nil %}
                  {% assign price_varies = price_varies | default: false %}
                  {% assign compare_at_price_varies = compare_at_price_varies | default: false %}
                  
                  {% for variant in product.variants %}
                    {% if price_min == nil or variant.price < price_min %}
                      {% assign price_min = variant.price %}
                    {% endif %}
                    {% if price_max == nil or variant.price > price_max %}
                      {% assign price_max = variant.price %}
                    {% endif %}
                    {% assign tmp_compare_at_price = variant.compare_at_price %}
                    {% unless variant.compare_at_price %}
                      {% assign tmp_compare_at_price = variant.price %}
                    {% endunless %}
                    {% if compare_at_price_min == nil or tmp_compare_at_price < compare_at_price_min %}
                      {% assign compare_at_price_min = tmp_compare_at_price %}
                    {% endif %}
                    {% if compare_at_price_max == nil or tmp_compare_at_price > compare_at_price_max %}
                      {% assign compare_at_price_max = tmp_compare_at_price %}
                    {% endif %}
                  
                    {% assign price_difference = tmp_compare_at_price | minus: variant.price %}
                    {% if price_difference > savings_money_range %}
                      {% assign savings_money_range = price_difference %}
                      {% assign savings_percentage_range = savings_money_range | times: 1.0 | divided_by: variant.compare_at_price | times: 100.0 | round %}
                    {% endif %}
                  {% endfor %}
                  
                  {% assign savings_money_single = selected_variant.compare_at_price | minus: selected_variant.price %}
                  {% assign savings_percentage_single = savings_money_single | times: 1.0 | divided_by: selected_variant.compare_at_price | times: 100.0 | round %}
                  
                  {% assign product_available = product_available | default: product.available %}
                  
                  {%- if product_available != true -%}
                    <span class="{{ class_root }}__badge {{ class_root }}__badge--soldout">
                      {{ 'product_price.badge.sold_out' | t }}
                    </span>
                  {%- elsif on_sale and sales_badge -%}
                    {% assign on_sale = on_sale | default: true %}
                    {% assign saved_price_single = savings_money_single | money %}
                    {% assign saved_price_range = savings_money_range | money %}
                    {% if savings_money_range <= 0 %}
                      {% assign on_sale = false %}
                    {% endif %}
                  
                    <span class="{{ class_root }}__badge {{ class_root }}__badge--sale"
                      data-badge-sales
                      {% if on_sale != true %}style="display: none;"{% endif %}
                    >
                      <span data-badge-sales-range>
                        {% if sales_badge_style == 'percent' %}
                          {% if price_varies or compare_at_price_varies %}
                            {{ 'product_price.badge.sale_percentage_range_html' | t: savings: savings_percentage_range | strip_newlines }}
                          {% else %}
                            {{ 'product_price.badge.sale_percentage_single_html' | t: savings: savings_percentage_range | strip_newlines }}
                          {% endif %}
                        {% elsif sales_badge_style == 'money' %}
                          {% if price_varies or compare_at_price_varies %}
                            {{ 'product_price.badge.sale_money_range_html' | t: savings: saved_price_range | strip_newlines }}
                          {% else %}
                            {{ 'product_price.badge.sale_money_single_html' | t: savings: saved_price_range | strip_newlines }}
                          {% endif %}
                        {% else %}
                          {{ 'product_price.badge.sale' | t }}
                        {% endif %}
                      </span>
                      <span data-badge-sales-single style="display: none;">
                        {% if sales_badge_style == 'percent' %}
                          {{ 'product_price.badge.sale_percentage_single_html' | t: savings: savings_percentage_single | strip_newlines }}
                        {% elsif sales_badge_style == 'money' %}
                          {{ 'product_price.badge.sale_money_single_html' | t: savings: saved_price_single | strip_newlines }}
                        {% else %}
                          {{ 'product_price.badge.sale' | t }}
                        {% endif %}
                      </span>
                    </span>
                  {%- elsif preorder_badge -%}
                    <span class="{{ class_root }}__badge {{ class_root }}__badge--pre-order">
                      {{ 'product_price.badge.pre_order' | t }}
                    </span>
                  {%- endif -%}
                  {% comment %}Inject @pixelunion/shopify-price-ui/sale-badge end{% endcomment %}
    
                </div>
              {% endif %}
    
              <div class="hotspot__tooltip-title">
                {{ hotspot_product_2.title }}
              </div>
    
              {% if show_vendor %}
                <div class="hotspot__tooltip-vendor">
                  {{ hotspot_product_2.vendor }}
                </div>
              {% endif %}
    
              <div class="hotspot__tooltip-price">
                {% assign product = hotspot_product_2 %}
                {% assign selected_variant = product.selected_or_first_available_variant %}
                {% assign compare_at_price = selected_variant.compare_at_price %}
                {% assign price = selected_variant.price %}
    
                {% comment %}Inject @pixelunion/shopify-price-ui/price begin{% endcomment %}
                {% comment %}
                  @param class_root {String}
                    Base class root
                
                  @param show_range {Bool}
                    Show price range
                
                  @param price_varies {Boolean}
                    If true, the variant price varies
                
                  @param compare_at_price_varies {Boolean}
                    If true, the variant compare price varies
                
                  @param price_range_format {String}
                      'range' or 'from', defaults to 'range'
                
                  @param product {Product}
                      Product to reference for price
                
                  @param on_sale {Bool}
                    If a product, or one of it's variants is on sale
                
                  @param emphasize_price {Bool}
                    Used in product grid item to add placeholder space
                
                  @param show_original {Bool}
                    Show original price if is consistent across all variants
                
                  @param show_savings {Bool}
                    Line of text indicating maximum savings on sale items (ex. "Save up to 20%")
                
                  @param savings_format {String}
                    Percentage or money for show_savings line
                
                  @param include_spacer {Bool}
                    Include a spacer div above the price when emphasize price is enabled and there is no 'compare-at' price
                
                  @param include_unit_price
                    Include the unit price line
                
                  @param include_tax_line
                    Include tax line
                
                  @param include_hidden_price
                    Include a hidden element with price data to use in cases of unavailable variants or cases where no variant
                    is selected by default
                
                  @param include_compare_price
                    Show compare at price
                {% endcomment %}
                
                {% assign price_min = nil %}
                {% assign price_max = nil %}
                {% assign compare_at_price_min = nil %}
                {% assign compare_at_price_max = nil %}
                {% assign price_varies = price_varies | default: false %}
                {% assign compare_at_price_varies = compare_at_price_varies | default: false %}
                
                {% for variant in product.variants %}
                  {% if price_min == nil or variant.price < price_min %}
                    {% assign price_min = variant.price %}
                  {% endif %}
                  {% if price_max == nil or variant.price > price_max %}
                    {% assign price_max = variant.price %}
                  {% endif %}
                  {% assign tmp_compare_at_price = variant.compare_at_price %}
                  {% unless variant.compare_at_price %}
                    {% assign tmp_compare_at_price = variant.price %}
                  {% endunless %}
                  {% if compare_at_price_min == nil or tmp_compare_at_price < compare_at_price_min %}
                    {% assign compare_at_price_min = tmp_compare_at_price %}
                  {% endif %}
                  {% if compare_at_price_max == nil or tmp_compare_at_price > compare_at_price_max %}
                    {% assign compare_at_price_max = tmp_compare_at_price %}
                  {% endif %}
                {% endfor %}
                
                {% assign show_range = show_range | default: false %}
                {% assign price = price | default: product.price %}
                {% assign compare_at_price = compare_at_price | default: product.compare_at_price %}
                {% assign variants = product.variants %}
                {% assign price_range_format = price_range_format | default: 'range' %}
                {% assign savings_format = savings_format | default: 'percentage' %}
                {% assign on_sale = on_sale | default: false %}
                {% assign emphasize_price = emphasize_price | default: false %}
                {% assign show_original = show_original | default: false %}
                {% assign show_savings = show_savings | default: false %}
                {% assign class_root = class_root | default: 'product' %}
                {% assign include_spacer = include_spacer | default: false %}
                {% assign include_unit_price = include_unit_price | default: false %}
                {% assign include_tax_line = include_tax_line | default: false %}
                {% assign include_compare_price = include_compare_price | default: true %}
                
                <div class="price {{ class_root }}__price {% if compare_at_price_varies %}price--varies{% endif %}">
                  {% if include_compare_price %}
                    <div
                      class="price__compare-at {% if emphasize_price or on_sale and show_original %}visible{% endif %}"
                      data-price-compare-container
                    >
                      {%- capture compare_at_price_html -%}
                        <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                        <span class="money price__compare-at--single" data-price-compare>
                          {{ compare_at_price | money }}
                        </span>
                      {%- endcapture -%}
                
                      {% if compare_at_price_varies %}
                        {%- capture compare_at_price_range_html -%}
                          {% if price_range_format == 'range' %}
                            <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                            <span class="money price__compare-at--min" data-price-compare-min>
                              {{ compare_at_price_min | money }}
                            </span>
                            -
                            <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                            <span class="money price__compare-at--max" data-price-compare-max>
                              {{ compare_at_price_max | money }}
                            </span>
                          {% else %}
                            {{ 'product_price.item.price.range_html' | t: price: compare_at_price_html | strip_newlines }}
                          {% endif %}
                        {% endcapture %}
                      {% endif %}
                
                      {% if compare_at_price_varies and on_sale and show_original and show_range %}
                        {{ compare_at_price_range_html }}
                      {% elsif on_sale and show_original %}
                        {{ compare_at_price_html }}
                      {% elsif emphasize_price and include_spacer %}
                        <span class="price__spacer"></span>
                      {% elsif show_original %}
                        <span class="money price__original" data-price-original></span>
                      {% endif %}
                    </div>
                
                
                    {% if include_hidden_price %}
                      {% comment %}
                        Hide an element containing compare at price info to fill in the price when no variant is selected
                      {% endcomment %}
                      <div class="price__compare-at--hidden" data-compare-price-range-hidden>
                        {% if price_range_format == 'range' %}
                          <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                          <span class="money price__compare-at--min" data-price-compare-min>
                            {{ compare_at_price_min | money }}
                          </span>
                          -
                          <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                          <span class="money price__compare-at--max" data-price-compare-max>
                            {{ compare_at_price_max | money }}
                          </span>
                        {% else %}
                          {{ 'product_price.item.price.range_html' | t: price: compare_at_price_html | strip_newlines }}
                        {% endif %}
                      </div>
                      <div class="price__compare-at--hidden" data-compare-price-hidden>
                        <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                        <span class="money price__compare-at--single" data-price-compare>
                          {{ compare_at_price | money }}
                        </span>
                      </div>
                    {% endif %}
                  {% endif %}
                
                  <div class="price__current {% if emphasize_price %}price__current--emphasize{% endif %} {% if on_sale %}price__current--on-sale{% endif %}" data-price-container>
                    {%- capture price_html -%}
                      <span class="money" data-price>
                        {{ price | money }}
                      </span>
                    {%- endcapture -%}
                
                    {% capture current_price_range_html %}
                      {% if price_varies %}
                        {% if price_range_format == 'range' %}
                          <span class="money price__current--min" data-price-min>{{ price_min | money}}</span>
                          -
                          <span class="money price__current--max" data-price-max>{{ price_max | money }}</span>
                        {% else %}
                          {{ 'product_price.price.range_html' | t: price: price_html | strip_newlines }}
                        {% endif %}
                      {% endif %}
                    {% endcapture %}
                
                    {% capture current_price_html %}
                      {% if on_sale and show_original %}
                        <span class="visually-hidden">{{ 'product_price.price.current' | t }}</span>
                      {% endif %}
                      {{ price_html }}
                    {% endcapture %}
                
                    {% if show_range and price_varies %}
                      {{ current_price_range_html }}
                    {% else %}
                      {{ current_price_html }}
                    {% endif %}
                  </div>
                
                  {% if include_hidden_price %}
                    {% comment %}
                      Hide an element containing current price info to fill in the price when no variant is selected
                    {% endcomment %}
                    <div class="price__current--hidden" data-current-price-range-hidden>
                      {% if price_range_format == 'range' %}
                        <span class="money price__current--min" data-price-min>{{ price_min | money}}</span>
                        -
                        <span class="money price__current--max" data-price-max>{{ price_max | money }}</span>
                      {% else %}
                        {{ 'product_price.price.range_html' | t: price: price_html | strip_newlines }}
                      {% endif %}
                    </div>
                    <div class="price__current--hidden" data-current-price-hidden>
                      <span class="visually-hidden">{{ 'product_price.price.current' | t }}</span>
                      {{ price_html }}
                    </div>
                  {% endif %}
                
                  {% if include_unit_price %}
                    {% assign variant = product.selected_or_first_available_variant %}
                    {% capture total_quantity %}<span class="{{ class_root }}__total-quantity" data-total-quantity>{{ variant.unit_price_measurement.quantity_value }}{{ variant.unit_price_measurement.quantity_unit }}</span>{% endcapture %}
                    {% capture unit_price %}<span class="{{ class_root }}__unit-price--amount money" data-unit-price-amount>{{ variant.unit_price | money }}</span>{% endcapture %}
                    {% capture unit_measure %}<span class="{{ class_root }}__unit-price--measure" data-unit-price-measure>{%- if variant.unit_price_measurement.reference_value != 1 -%}{{ variant.unit_price_measurement.reference_value }}{%- endif %}{{ variant.unit_price_measurement.reference_unit }}</span>{% endcapture %}
                
                    <div
                      class="
                        {{ class_root }}__unit-price
                        {% unless variant.unit_price_measurement %}hidden{% endunless %}
                      "
                      data-unit-price
                    >
                      {{ 'product_price.price.price_per_unit_html' | t: total_quantity: total_quantity, unit_price: unit_price, unit_measure: unit_measure | strip_newlines }}
                    </div>
                  {% endif %}
                
                  {% if include_tax_line %}
                    {%- capture tax_text -%}
                      {{ 'product_price.price.tax_line_html' | t }}
                    {%- endcapture -%}
                
                    {%- if tax_text != blank and class_root != 'productitem' -%}
                      <div class="
                          {{ class_root }}__tax
                          {% unless variant.taxable %}hidden{% endunless %}
                        "
                        data-tax-line
                      >
                        {{ tax_text }}
                      </div>
                    {%- endif -%}
                  {% endif %}
                </div>
                {% comment %}Inject @pixelunion/shopify-price-ui/price end{% endcomment %}
    
              </div>
    
              {% if tooltip_link_text != blank %}
                <div class="hotspot__tooltip-link">
                  {{ tooltip_link_text }}
                </div>
              {% endif %}
            </div>
          </a>
        </div>
      </div>
    {% endif %}
    
    {% assign hotspot_product_3 = all_products[block.settings.product_3] %}
    {% if hotspot_product_3 != empty %}
      <div
        class="shoppable-image__hotspot"
        style="
          left: {{ block.settings.x_axis_3 }}%;
          bottom: {{ block.settings.y_axis_3 }}%;
          visibility: hidden;
          "
        data-hotspot-x-axis="{{ block.settings.x_axis_3 }}"
        data-hotspot-y-axis="{{ block.settings.y_axis_3 }}"
        data-hotspot
        data-hotspot-product="{{ hotspot_product_3.id }}"
        aria-label="Product hotspot"
        tabindex=0
        {{ block.shopify_attributes }}
      >
        <div class="shoppable-image__hotspot-inner"></div>
        <div
          class="hotspot__tooltip-wrapper"
          data-tooltip-wrapper
          role="tooltip"
        >
          <a
            href="{{ hotspot_product_3.url }}"
            class="hotspot__tooltip"
            data-tooltip
            tabindex=0
          >
            {% if show_tooltip_image %}
              <div class="hotspot__tooltip-image-wrapper">
                {% if hotspot_product_3.featured_media.preview_image %}
                  {%
                    include 'rimg',
                    img: hotspot_product_3.featured_media.preview_image,
                    size: '800x',
                    class: 'tooltip__image',
                    crop: 'center',
                    lazy: true,
                    canvas: true
                  %}
                {% else %}
                  {{ 'product-1' | placeholder_svg_tag: 'tooltip__image tooltip__placeholder-image' }}
                {% endif %}
              </div>
            {% endif %}
    
            <div class="hotspot__tooltip-content">
              {% assign class_root = 'hotspot' %}
              {% if show_sale_badge %}
                <div class="hotspot__tooltip-sale">
                  {% assign product = hotspot_product_3 %}
                  {% assign sales_badge = true %}
                  {% comment %}Inject @pixelunion/shopify-price-ui/sale-badge begin{% endcomment %}
                  {% comment %}
                    @param product {Product}
                  
                    @param class_root {String}
                      Base class root
                  
                    @param price_varies {Boolean}
                      If true, the variant price varies
                  
                    @param compare_at_price_varies {Boolean}
                      If true, the variant compare price varies
                  
                    @param product_available {Boolean}
                  
                    @param on_sale {Boolean}
                      If a product, or one of it's variants is on sale
                  
                    @param sales_badge {Boolean}
                      False: Sold out badge only
                      True: Show sale badge
                  
                    @param sales_badge_style
                  
                    @param preorder_badge {Boolean}
                      If true, show the pre-order badge
                  
                    @param include_hidden_badge
                      Include a hidden element with sale data to use in cases of unavailable variants or cases where no variant
                      is selected by default
                  {% endcomment %}
                  
                  {% assign savings_money_range = 0 %}
                  {% assign savings_percentage_range = 0 %}
                  
                  {% assign price_min = nil %}
                  {% assign price_max = nil %}
                  {% assign compare_at_price_min = nil %}
                  {% assign compare_at_price_max = nil %}
                  {% assign price_varies = price_varies | default: false %}
                  {% assign compare_at_price_varies = compare_at_price_varies | default: false %}
                  
                  {% for variant in product.variants %}
                    {% if price_min == nil or variant.price < price_min %}
                      {% assign price_min = variant.price %}
                    {% endif %}
                    {% if price_max == nil or variant.price > price_max %}
                      {% assign price_max = variant.price %}
                    {% endif %}
                    {% assign tmp_compare_at_price = variant.compare_at_price %}
                    {% unless variant.compare_at_price %}
                      {% assign tmp_compare_at_price = variant.price %}
                    {% endunless %}
                    {% if compare_at_price_min == nil or tmp_compare_at_price < compare_at_price_min %}
                      {% assign compare_at_price_min = tmp_compare_at_price %}
                    {% endif %}
                    {% if compare_at_price_max == nil or tmp_compare_at_price > compare_at_price_max %}
                      {% assign compare_at_price_max = tmp_compare_at_price %}
                    {% endif %}
                  
                    {% assign price_difference = tmp_compare_at_price | minus: variant.price %}
                    {% if price_difference > savings_money_range %}
                      {% assign savings_money_range = price_difference %}
                      {% assign savings_percentage_range = savings_money_range | times: 1.0 | divided_by: variant.compare_at_price | times: 100.0 | round %}
                    {% endif %}
                  {% endfor %}
                  
                  {% assign savings_money_single = selected_variant.compare_at_price | minus: selected_variant.price %}
                  {% assign savings_percentage_single = savings_money_single | times: 1.0 | divided_by: selected_variant.compare_at_price | times: 100.0 | round %}
                  
                  {% assign product_available = product_available | default: product.available %}
                  
                  {%- if product_available != true -%}
                    <span class="{{ class_root }}__badge {{ class_root }}__badge--soldout">
                      {{ 'product_price.badge.sold_out' | t }}
                    </span>
                  {%- elsif on_sale and sales_badge -%}
                    {% assign on_sale = on_sale | default: true %}
                    {% assign saved_price_single = savings_money_single | money %}
                    {% assign saved_price_range = savings_money_range | money %}
                    {% if savings_money_range <= 0 %}
                      {% assign on_sale = false %}
                    {% endif %}
                  
                    <span class="{{ class_root }}__badge {{ class_root }}__badge--sale"
                      data-badge-sales
                      {% if on_sale != true %}style="display: none;"{% endif %}
                    >
                      <span data-badge-sales-range>
                        {% if sales_badge_style == 'percent' %}
                          {% if price_varies or compare_at_price_varies %}
                            {{ 'product_price.badge.sale_percentage_range_html' | t: savings: savings_percentage_range | strip_newlines }}
                          {% else %}
                            {{ 'product_price.badge.sale_percentage_single_html' | t: savings: savings_percentage_range | strip_newlines }}
                          {% endif %}
                        {% elsif sales_badge_style == 'money' %}
                          {% if price_varies or compare_at_price_varies %}
                            {{ 'product_price.badge.sale_money_range_html' | t: savings: saved_price_range | strip_newlines }}
                          {% else %}
                            {{ 'product_price.badge.sale_money_single_html' | t: savings: saved_price_range | strip_newlines }}
                          {% endif %}
                        {% else %}
                          {{ 'product_price.badge.sale' | t }}
                        {% endif %}
                      </span>
                      <span data-badge-sales-single style="display: none;">
                        {% if sales_badge_style == 'percent' %}
                          {{ 'product_price.badge.sale_percentage_single_html' | t: savings: savings_percentage_single | strip_newlines }}
                        {% elsif sales_badge_style == 'money' %}
                          {{ 'product_price.badge.sale_money_single_html' | t: savings: saved_price_single | strip_newlines }}
                        {% else %}
                          {{ 'product_price.badge.sale' | t }}
                        {% endif %}
                      </span>
                    </span>
                  {%- elsif preorder_badge -%}
                    <span class="{{ class_root }}__badge {{ class_root }}__badge--pre-order">
                      {{ 'product_price.badge.pre_order' | t }}
                    </span>
                  {%- endif -%}
                  {% comment %}Inject @pixelunion/shopify-price-ui/sale-badge end{% endcomment %}
    
                </div>
              {% endif %}
    
              <div class="hotspot__tooltip-title">
                {{ hotspot_product_3.title }}
              </div>
    
              {% if show_vendor %}
                <div class="hotspot__tooltip-vendor">
                  {{ hotspot_product_3.vendor }}
                </div>
              {% endif %}
    
              <div class="hotspot__tooltip-price">
                {% assign product = hotspot_product_3 %}
                {% assign selected_variant = product.selected_or_first_available_variant %}
                {% assign compare_at_price = selected_variant.compare_at_price %}
                {% assign price = selected_variant.price %}
    
                {% comment %}Inject @pixelunion/shopify-price-ui/price begin{% endcomment %}
                {% comment %}
                  @param class_root {String}
                    Base class root
                
                  @param show_range {Bool}
                    Show price range
                
                  @param price_varies {Boolean}
                    If true, the variant price varies
                
                  @param compare_at_price_varies {Boolean}
                    If true, the variant compare price varies
                
                  @param price_range_format {String}
                      'range' or 'from', defaults to 'range'
                
                  @param product {Product}
                      Product to reference for price
                
                  @param on_sale {Bool}
                    If a product, or one of it's variants is on sale
                
                  @param emphasize_price {Bool}
                    Used in product grid item to add placeholder space
                
                  @param show_original {Bool}
                    Show original price if is consistent across all variants
                
                  @param show_savings {Bool}
                    Line of text indicating maximum savings on sale items (ex. "Save up to 20%")
                
                  @param savings_format {String}
                    Percentage or money for show_savings line
                
                  @param include_spacer {Bool}
                    Include a spacer div above the price when emphasize price is enabled and there is no 'compare-at' price
                
                  @param include_unit_price
                    Include the unit price line
                
                  @param include_tax_line
                    Include tax line
                
                  @param include_hidden_price
                    Include a hidden element with price data to use in cases of unavailable variants or cases where no variant
                    is selected by default
                
                  @param include_compare_price
                    Show compare at price
                {% endcomment %}
                
                {% assign price_min = nil %}
                {% assign price_max = nil %}
                {% assign compare_at_price_min = nil %}
                {% assign compare_at_price_max = nil %}
                {% assign price_varies = price_varies | default: false %}
                {% assign compare_at_price_varies = compare_at_price_varies | default: false %}
                
                {% for variant in product.variants %}
                  {% if price_min == nil or variant.price < price_min %}
                    {% assign price_min = variant.price %}
                  {% endif %}
                  {% if price_max == nil or variant.price > price_max %}
                    {% assign price_max = variant.price %}
                  {% endif %}
                  {% assign tmp_compare_at_price = variant.compare_at_price %}
                  {% unless variant.compare_at_price %}
                    {% assign tmp_compare_at_price = variant.price %}
                  {% endunless %}
                  {% if compare_at_price_min == nil or tmp_compare_at_price < compare_at_price_min %}
                    {% assign compare_at_price_min = tmp_compare_at_price %}
                  {% endif %}
                  {% if compare_at_price_max == nil or tmp_compare_at_price > compare_at_price_max %}
                    {% assign compare_at_price_max = tmp_compare_at_price %}
                  {% endif %}
                {% endfor %}
                
                {% assign show_range = show_range | default: false %}
                {% assign price = price | default: product.price %}
                {% assign compare_at_price = compare_at_price | default: product.compare_at_price %}
                {% assign variants = product.variants %}
                {% assign price_range_format = price_range_format | default: 'range' %}
                {% assign savings_format = savings_format | default: 'percentage' %}
                {% assign on_sale = on_sale | default: false %}
                {% assign emphasize_price = emphasize_price | default: false %}
                {% assign show_original = show_original | default: false %}
                {% assign show_savings = show_savings | default: false %}
                {% assign class_root = class_root | default: 'product' %}
                {% assign include_spacer = include_spacer | default: false %}
                {% assign include_unit_price = include_unit_price | default: false %}
                {% assign include_tax_line = include_tax_line | default: false %}
                {% assign include_compare_price = include_compare_price | default: true %}
                
                <div class="price {{ class_root }}__price {% if compare_at_price_varies %}price--varies{% endif %}">
                  {% if include_compare_price %}
                    <div
                      class="price__compare-at {% if emphasize_price or on_sale and show_original %}visible{% endif %}"
                      data-price-compare-container
                    >
                      {%- capture compare_at_price_html -%}
                        <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                        <span class="money price__compare-at--single" data-price-compare>
                          {{ compare_at_price | money }}
                        </span>
                      {%- endcapture -%}
                
                      {% if compare_at_price_varies %}
                        {%- capture compare_at_price_range_html -%}
                          {% if price_range_format == 'range' %}
                            <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                            <span class="money price__compare-at--min" data-price-compare-min>
                              {{ compare_at_price_min | money }}
                            </span>
                            -
                            <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                            <span class="money price__compare-at--max" data-price-compare-max>
                              {{ compare_at_price_max | money }}
                            </span>
                          {% else %}
                            {{ 'product_price.item.price.range_html' | t: price: compare_at_price_html | strip_newlines }}
                          {% endif %}
                        {% endcapture %}
                      {% endif %}
                
                      {% if compare_at_price_varies and on_sale and show_original and show_range %}
                        {{ compare_at_price_range_html }}
                      {% elsif on_sale and show_original %}
                        {{ compare_at_price_html }}
                      {% elsif emphasize_price and include_spacer %}
                        <span class="price__spacer"></span>
                      {% elsif show_original %}
                        <span class="money price__original" data-price-original></span>
                      {% endif %}
                    </div>
                
                
                    {% if include_hidden_price %}
                      {% comment %}
                        Hide an element containing compare at price info to fill in the price when no variant is selected
                      {% endcomment %}
                      <div class="price__compare-at--hidden" data-compare-price-range-hidden>
                        {% if price_range_format == 'range' %}
                          <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                          <span class="money price__compare-at--min" data-price-compare-min>
                            {{ compare_at_price_min | money }}
                          </span>
                          -
                          <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                          <span class="money price__compare-at--max" data-price-compare-max>
                            {{ compare_at_price_max | money }}
                          </span>
                        {% else %}
                          {{ 'product_price.item.price.range_html' | t: price: compare_at_price_html | strip_newlines }}
                        {% endif %}
                      </div>
                      <div class="price__compare-at--hidden" data-compare-price-hidden>
                        <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                        <span class="money price__compare-at--single" data-price-compare>
                          {{ compare_at_price | money }}
                        </span>
                      </div>
                    {% endif %}
                  {% endif %}
                
                  <div class="price__current {% if emphasize_price %}price__current--emphasize{% endif %} {% if on_sale %}price__current--on-sale{% endif %}" data-price-container>
                    {%- capture price_html -%}
                      <span class="money" data-price>
                        {{ price | money }}
                      </span>
                    {%- endcapture -%}
                
                    {% capture current_price_range_html %}
                      {% if price_varies %}
                        {% if price_range_format == 'range' %}
                          <span class="money price__current--min" data-price-min>{{ price_min | money}}</span>
                          -
                          <span class="money price__current--max" data-price-max>{{ price_max | money }}</span>
                        {% else %}
                          {{ 'product_price.price.range_html' | t: price: price_html | strip_newlines }}
                        {% endif %}
                      {% endif %}
                    {% endcapture %}
                
                    {% capture current_price_html %}
                      {% if on_sale and show_original %}
                        <span class="visually-hidden">{{ 'product_price.price.current' | t }}</span>
                      {% endif %}
                      {{ price_html }}
                    {% endcapture %}
                
                    {% if show_range and price_varies %}
                      {{ current_price_range_html }}
                    {% else %}
                      {{ current_price_html }}
                    {% endif %}
                  </div>
                
                  {% if include_hidden_price %}
                    {% comment %}
                      Hide an element containing current price info to fill in the price when no variant is selected
                    {% endcomment %}
                    <div class="price__current--hidden" data-current-price-range-hidden>
                      {% if price_range_format == 'range' %}
                        <span class="money price__current--min" data-price-min>{{ price_min | money}}</span>
                        -
                        <span class="money price__current--max" data-price-max>{{ price_max | money }}</span>
                      {% else %}
                        {{ 'product_price.price.range_html' | t: price: price_html | strip_newlines }}
                      {% endif %}
                    </div>
                    <div class="price__current--hidden" data-current-price-hidden>
                      <span class="visually-hidden">{{ 'product_price.price.current' | t }}</span>
                      {{ price_html }}
                    </div>
                  {% endif %}
                
                  {% if include_unit_price %}
                    {% assign variant = product.selected_or_first_available_variant %}
                    {% capture total_quantity %}<span class="{{ class_root }}__total-quantity" data-total-quantity>{{ variant.unit_price_measurement.quantity_value }}{{ variant.unit_price_measurement.quantity_unit }}</span>{% endcapture %}
                    {% capture unit_price %}<span class="{{ class_root }}__unit-price--amount money" data-unit-price-amount>{{ variant.unit_price | money }}</span>{% endcapture %}
                    {% capture unit_measure %}<span class="{{ class_root }}__unit-price--measure" data-unit-price-measure>{%- if variant.unit_price_measurement.reference_value != 1 -%}{{ variant.unit_price_measurement.reference_value }}{%- endif %}{{ variant.unit_price_measurement.reference_unit }}</span>{% endcapture %}
                
                    <div
                      class="
                        {{ class_root }}__unit-price
                        {% unless variant.unit_price_measurement %}hidden{% endunless %}
                      "
                      data-unit-price
                    >
                      {{ 'product_price.price.price_per_unit_html' | t: total_quantity: total_quantity, unit_price: unit_price, unit_measure: unit_measure | strip_newlines }}
                    </div>
                  {% endif %}
                
                  {% if include_tax_line %}
                    {%- capture tax_text -%}
                      {{ 'product_price.price.tax_line_html' | t }}
                    {%- endcapture -%}
                
                    {%- if tax_text != blank and class_root != 'productitem' -%}
                      <div class="
                          {{ class_root }}__tax
                          {% unless variant.taxable %}hidden{% endunless %}
                        "
                        data-tax-line
                      >
                        {{ tax_text }}
                      </div>
                    {%- endif -%}
                  {% endif %}
                </div>
                {% comment %}Inject @pixelunion/shopify-price-ui/price end{% endcomment %}
    
              </div>
    
              {% if tooltip_link_text != blank %}
                <div class="hotspot__tooltip-link">
                  {{ tooltip_link_text }}
                </div>
              {% endif %}
            </div>
          </a>
        </div>
      </div>
    {% endif %}
    
    {% assign hotspot_product_4 = all_products[block.settings.product_4] %}
    {% if hotspot_product_4 != empty %}
      <div
        class="shoppable-image__hotspot"
        style="
          left: {{ block.settings.x_axis_4 }}%;
          bottom: {{ block.settings.y_axis_4 }}%;
          visibility: hidden;
          "
        data-hotspot-x-axis="{{ block.settings.x_axis_4 }}"
        data-hotspot-y-axis="{{ block.settings.y_axis_4 }}"
        data-hotspot
        data-hotspot-product="{{ hotspot_product_4.id }}"
        aria-label="Product hotspot"
        tabindex=0
        {{ block.shopify_attributes }}
      >
        <div class="shoppable-image__hotspot-inner"></div>
        <div
          class="hotspot__tooltip-wrapper"
          data-tooltip-wrapper
          role="tooltip"
        >
          <a
            href="{{ hotspot_product_4.url }}"
            class="hotspot__tooltip"
            data-tooltip
            tabindex=0
          >
            {% if show_tooltip_image %}
              <div class="hotspot__tooltip-image-wrapper">
                {% if hotspot_product_4.featured_media.preview_image %}
                  {%
                    include 'rimg',
                    img: hotspot_product_4.featured_media.preview_image,
                    size: '800x',
                    class: 'tooltip__image',
                    crop: 'center',
                    lazy: true,
                    canvas: true
                  %}
                {% else %}
                  {{ 'product-1' | placeholder_svg_tag: 'tooltip__image tooltip__placeholder-image' }}
                {% endif %}
              </div>
            {% endif %}
    
            <div class="hotspot__tooltip-content">
              {% assign class_root = 'hotspot' %}
              {% if show_sale_badge %}
                <div class="hotspot__tooltip-sale">
                  {% assign product = hotspot_product_4 %}
                  {% assign sales_badge = true %}
                  {% comment %}Inject @pixelunion/shopify-price-ui/sale-badge begin{% endcomment %}
                  {% comment %}
                    @param product {Product}
                  
                    @param class_root {String}
                      Base class root
                  
                    @param price_varies {Boolean}
                      If true, the variant price varies
                  
                    @param compare_at_price_varies {Boolean}
                      If true, the variant compare price varies
                  
                    @param product_available {Boolean}
                  
                    @param on_sale {Boolean}
                      If a product, or one of it's variants is on sale
                  
                    @param sales_badge {Boolean}
                      False: Sold out badge only
                      True: Show sale badge
                  
                    @param sales_badge_style
                  
                    @param preorder_badge {Boolean}
                      If true, show the pre-order badge
                  
                    @param include_hidden_badge
                      Include a hidden element with sale data to use in cases of unavailable variants or cases where no variant
                      is selected by default
                  {% endcomment %}
                  
                  {% assign savings_money_range = 0 %}
                  {% assign savings_percentage_range = 0 %}
                  
                  {% assign price_min = nil %}
                  {% assign price_max = nil %}
                  {% assign compare_at_price_min = nil %}
                  {% assign compare_at_price_max = nil %}
                  {% assign price_varies = price_varies | default: false %}
                  {% assign compare_at_price_varies = compare_at_price_varies | default: false %}
                  
                  {% for variant in product.variants %}
                    {% if price_min == nil or variant.price < price_min %}
                      {% assign price_min = variant.price %}
                    {% endif %}
                    {% if price_max == nil or variant.price > price_max %}
                      {% assign price_max = variant.price %}
                    {% endif %}
                    {% assign tmp_compare_at_price = variant.compare_at_price %}
                    {% unless variant.compare_at_price %}
                      {% assign tmp_compare_at_price = variant.price %}
                    {% endunless %}
                    {% if compare_at_price_min == nil or tmp_compare_at_price < compare_at_price_min %}
                      {% assign compare_at_price_min = tmp_compare_at_price %}
                    {% endif %}
                    {% if compare_at_price_max == nil or tmp_compare_at_price > compare_at_price_max %}
                      {% assign compare_at_price_max = tmp_compare_at_price %}
                    {% endif %}
                  
                    {% assign price_difference = tmp_compare_at_price | minus: variant.price %}
                    {% if price_difference > savings_money_range %}
                      {% assign savings_money_range = price_difference %}
                      {% assign savings_percentage_range = savings_money_range | times: 1.0 | divided_by: variant.compare_at_price | times: 100.0 | round %}
                    {% endif %}
                  {% endfor %}
                  
                  {% assign savings_money_single = selected_variant.compare_at_price | minus: selected_variant.price %}
                  {% assign savings_percentage_single = savings_money_single | times: 1.0 | divided_by: selected_variant.compare_at_price | times: 100.0 | round %}
                  
                  {% assign product_available = product_available | default: product.available %}
                  
                  {%- if product_available != true -%}
                    <span class="{{ class_root }}__badge {{ class_root }}__badge--soldout">
                      {{ 'product_price.badge.sold_out' | t }}
                    </span>
                  {%- elsif on_sale and sales_badge -%}
                    {% assign on_sale = on_sale | default: true %}
                    {% assign saved_price_single = savings_money_single | money %}
                    {% assign saved_price_range = savings_money_range | money %}
                    {% if savings_money_range <= 0 %}
                      {% assign on_sale = false %}
                    {% endif %}
                  
                    <span class="{{ class_root }}__badge {{ class_root }}__badge--sale"
                      data-badge-sales
                      {% if on_sale != true %}style="display: none;"{% endif %}
                    >
                      <span data-badge-sales-range>
                        {% if sales_badge_style == 'percent' %}
                          {% if price_varies or compare_at_price_varies %}
                            {{ 'product_price.badge.sale_percentage_range_html' | t: savings: savings_percentage_range | strip_newlines }}
                          {% else %}
                            {{ 'product_price.badge.sale_percentage_single_html' | t: savings: savings_percentage_range | strip_newlines }}
                          {% endif %}
                        {% elsif sales_badge_style == 'money' %}
                          {% if price_varies or compare_at_price_varies %}
                            {{ 'product_price.badge.sale_money_range_html' | t: savings: saved_price_range | strip_newlines }}
                          {% else %}
                            {{ 'product_price.badge.sale_money_single_html' | t: savings: saved_price_range | strip_newlines }}
                          {% endif %}
                        {% else %}
                          {{ 'product_price.badge.sale' | t }}
                        {% endif %}
                      </span>
                      <span data-badge-sales-single style="display: none;">
                        {% if sales_badge_style == 'percent' %}
                          {{ 'product_price.badge.sale_percentage_single_html' | t: savings: savings_percentage_single | strip_newlines }}
                        {% elsif sales_badge_style == 'money' %}
                          {{ 'product_price.badge.sale_money_single_html' | t: savings: saved_price_single | strip_newlines }}
                        {% else %}
                          {{ 'product_price.badge.sale' | t }}
                        {% endif %}
                      </span>
                    </span>
                  {%- elsif preorder_badge -%}
                    <span class="{{ class_root }}__badge {{ class_root }}__badge--pre-order">
                      {{ 'product_price.badge.pre_order' | t }}
                    </span>
                  {%- endif -%}
                  {% comment %}Inject @pixelunion/shopify-price-ui/sale-badge end{% endcomment %}
    
                </div>
              {% endif %}
    
              <div class="hotspot__tooltip-title">
                {{ hotspot_product_4.title }}
              </div>
    
              {% if show_vendor %}
                <div class="hotspot__tooltip-vendor">
                  {{ hotspot_product_4.vendor }}
                </div>
              {% endif %}
    
              <div class="hotspot__tooltip-price">
                {% assign product = hotspot_product_4 %}
                {% assign selected_variant = product.selected_or_first_available_variant %}
                {% assign compare_at_price = selected_variant.compare_at_price %}
                {% assign price = selected_variant.price %}
    
                {% comment %}Inject @pixelunion/shopify-price-ui/price begin{% endcomment %}
                {% comment %}
                  @param class_root {String}
                    Base class root
                
                  @param show_range {Bool}
                    Show price range
                
                  @param price_varies {Boolean}
                    If true, the variant price varies
                
                  @param compare_at_price_varies {Boolean}
                    If true, the variant compare price varies
                
                  @param price_range_format {String}
                      'range' or 'from', defaults to 'range'
                
                  @param product {Product}
                      Product to reference for price
                
                  @param on_sale {Bool}
                    If a product, or one of it's variants is on sale
                
                  @param emphasize_price {Bool}
                    Used in product grid item to add placeholder space
                
                  @param show_original {Bool}
                    Show original price if is consistent across all variants
                
                  @param show_savings {Bool}
                    Line of text indicating maximum savings on sale items (ex. "Save up to 20%")
                
                  @param savings_format {String}
                    Percentage or money for show_savings line
                
                  @param include_spacer {Bool}
                    Include a spacer div above the price when emphasize price is enabled and there is no 'compare-at' price
                
                  @param include_unit_price
                    Include the unit price line
                
                  @param include_tax_line
                    Include tax line
                
                  @param include_hidden_price
                    Include a hidden element with price data to use in cases of unavailable variants or cases where no variant
                    is selected by default
                
                  @param include_compare_price
                    Show compare at price
                {% endcomment %}
                
                {% assign price_min = nil %}
                {% assign price_max = nil %}
                {% assign compare_at_price_min = nil %}
                {% assign compare_at_price_max = nil %}
                {% assign price_varies = price_varies | default: false %}
                {% assign compare_at_price_varies = compare_at_price_varies | default: false %}
                
                {% for variant in product.variants %}
                  {% if price_min == nil or variant.price < price_min %}
                    {% assign price_min = variant.price %}
                  {% endif %}
                  {% if price_max == nil or variant.price > price_max %}
                    {% assign price_max = variant.price %}
                  {% endif %}
                  {% assign tmp_compare_at_price = variant.compare_at_price %}
                  {% unless variant.compare_at_price %}
                    {% assign tmp_compare_at_price = variant.price %}
                  {% endunless %}
                  {% if compare_at_price_min == nil or tmp_compare_at_price < compare_at_price_min %}
                    {% assign compare_at_price_min = tmp_compare_at_price %}
                  {% endif %}
                  {% if compare_at_price_max == nil or tmp_compare_at_price > compare_at_price_max %}
                    {% assign compare_at_price_max = tmp_compare_at_price %}
                  {% endif %}
                {% endfor %}
                
                {% assign show_range = show_range | default: false %}
                {% assign price = price | default: product.price %}
                {% assign compare_at_price = compare_at_price | default: product.compare_at_price %}
                {% assign variants = product.variants %}
                {% assign price_range_format = price_range_format | default: 'range' %}
                {% assign savings_format = savings_format | default: 'percentage' %}
                {% assign on_sale = on_sale | default: false %}
                {% assign emphasize_price = emphasize_price | default: false %}
                {% assign show_original = show_original | default: false %}
                {% assign show_savings = show_savings | default: false %}
                {% assign class_root = class_root | default: 'product' %}
                {% assign include_spacer = include_spacer | default: false %}
                {% assign include_unit_price = include_unit_price | default: false %}
                {% assign include_tax_line = include_tax_line | default: false %}
                {% assign include_compare_price = include_compare_price | default: true %}
                
                <div class="price {{ class_root }}__price {% if compare_at_price_varies %}price--varies{% endif %}">
                  {% if include_compare_price %}
                    <div
                      class="price__compare-at {% if emphasize_price or on_sale and show_original %}visible{% endif %}"
                      data-price-compare-container
                    >
                      {%- capture compare_at_price_html -%}
                        <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                        <span class="money price__compare-at--single" data-price-compare>
                          {{ compare_at_price | money }}
                        </span>
                      {%- endcapture -%}
                
                      {% if compare_at_price_varies %}
                        {%- capture compare_at_price_range_html -%}
                          {% if price_range_format == 'range' %}
                            <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                            <span class="money price__compare-at--min" data-price-compare-min>
                              {{ compare_at_price_min | money }}
                            </span>
                            -
                            <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                            <span class="money price__compare-at--max" data-price-compare-max>
                              {{ compare_at_price_max | money }}
                            </span>
                          {% else %}
                            {{ 'product_price.item.price.range_html' | t: price: compare_at_price_html | strip_newlines }}
                          {% endif %}
                        {% endcapture %}
                      {% endif %}
                
                      {% if compare_at_price_varies and on_sale and show_original and show_range %}
                        {{ compare_at_price_range_html }}
                      {% elsif on_sale and show_original %}
                        {{ compare_at_price_html }}
                      {% elsif emphasize_price and include_spacer %}
                        <span class="price__spacer"></span>
                      {% elsif show_original %}
                        <span class="money price__original" data-price-original></span>
                      {% endif %}
                    </div>
                
                
                    {% if include_hidden_price %}
                      {% comment %}
                        Hide an element containing compare at price info to fill in the price when no variant is selected
                      {% endcomment %}
                      <div class="price__compare-at--hidden" data-compare-price-range-hidden>
                        {% if price_range_format == 'range' %}
                          <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                          <span class="money price__compare-at--min" data-price-compare-min>
                            {{ compare_at_price_min | money }}
                          </span>
                          -
                          <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                          <span class="money price__compare-at--max" data-price-compare-max>
                            {{ compare_at_price_max | money }}
                          </span>
                        {% else %}
                          {{ 'product_price.item.price.range_html' | t: price: compare_at_price_html | strip_newlines }}
                        {% endif %}
                      </div>
                      <div class="price__compare-at--hidden" data-compare-price-hidden>
                        <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                        <span class="money price__compare-at--single" data-price-compare>
                          {{ compare_at_price | money }}
                        </span>
                      </div>
                    {% endif %}
                  {% endif %}
                
                  <div class="price__current {% if emphasize_price %}price__current--emphasize{% endif %} {% if on_sale %}price__current--on-sale{% endif %}" data-price-container>
                    {%- capture price_html -%}
                      <span class="money" data-price>
                        {{ price | money }}
                      </span>
                    {%- endcapture -%}
                
                    {% capture current_price_range_html %}
                      {% if price_varies %}
                        {% if price_range_format == 'range' %}
                          <span class="money price__current--min" data-price-min>{{ price_min | money}}</span>
                          -
                          <span class="money price__current--max" data-price-max>{{ price_max | money }}</span>
                        {% else %}
                          {{ 'product_price.price.range_html' | t: price: price_html | strip_newlines }}
                        {% endif %}
                      {% endif %}
                    {% endcapture %}
                
                    {% capture current_price_html %}
                      {% if on_sale and show_original %}
                        <span class="visually-hidden">{{ 'product_price.price.current' | t }}</span>
                      {% endif %}
                      {{ price_html }}
                    {% endcapture %}
                
                    {% if show_range and price_varies %}
                      {{ current_price_range_html }}
                    {% else %}
                      {{ current_price_html }}
                    {% endif %}
                  </div>
                
                  {% if include_hidden_price %}
                    {% comment %}
                      Hide an element containing current price info to fill in the price when no variant is selected
                    {% endcomment %}
                    <div class="price__current--hidden" data-current-price-range-hidden>
                      {% if price_range_format == 'range' %}
                        <span class="money price__current--min" data-price-min>{{ price_min | money}}</span>
                        -
                        <span class="money price__current--max" data-price-max>{{ price_max | money }}</span>
                      {% else %}
                        {{ 'product_price.price.range_html' | t: price: price_html | strip_newlines }}
                      {% endif %}
                    </div>
                    <div class="price__current--hidden" data-current-price-hidden>
                      <span class="visually-hidden">{{ 'product_price.price.current' | t }}</span>
                      {{ price_html }}
                    </div>
                  {% endif %}
                
                  {% if include_unit_price %}
                    {% assign variant = product.selected_or_first_available_variant %}
                    {% capture total_quantity %}<span class="{{ class_root }}__total-quantity" data-total-quantity>{{ variant.unit_price_measurement.quantity_value }}{{ variant.unit_price_measurement.quantity_unit }}</span>{% endcapture %}
                    {% capture unit_price %}<span class="{{ class_root }}__unit-price--amount money" data-unit-price-amount>{{ variant.unit_price | money }}</span>{% endcapture %}
                    {% capture unit_measure %}<span class="{{ class_root }}__unit-price--measure" data-unit-price-measure>{%- if variant.unit_price_measurement.reference_value != 1 -%}{{ variant.unit_price_measurement.reference_value }}{%- endif %}{{ variant.unit_price_measurement.reference_unit }}</span>{% endcapture %}
                
                    <div
                      class="
                        {{ class_root }}__unit-price
                        {% unless variant.unit_price_measurement %}hidden{% endunless %}
                      "
                      data-unit-price
                    >
                      {{ 'product_price.price.price_per_unit_html' | t: total_quantity: total_quantity, unit_price: unit_price, unit_measure: unit_measure | strip_newlines }}
                    </div>
                  {% endif %}
                
                  {% if include_tax_line %}
                    {%- capture tax_text -%}
                      {{ 'product_price.price.tax_line_html' | t }}
                    {%- endcapture -%}
                
                    {%- if tax_text != blank and class_root != 'productitem' -%}
                      <div class="
                          {{ class_root }}__tax
                          {% unless variant.taxable %}hidden{% endunless %}
                        "
                        data-tax-line
                      >
                        {{ tax_text }}
                      </div>
                    {%- endif -%}
                  {% endif %}
                </div>
                {% comment %}Inject @pixelunion/shopify-price-ui/price end{% endcomment %}
    
              </div>
    
              {% if tooltip_link_text != blank %}
                <div class="hotspot__tooltip-link">
                  {{ tooltip_link_text }}
                </div>
              {% endif %}
            </div>
          </a>
        </div>
      </div>
    {% endif %}
    {% assign hotspot_product_5 = all_products[block.settings.product_5] %}
    {% if hotspot_product_5 != empty %}
      <div
        class="shoppable-image__hotspot"
        style="
          left: {{ block.settings.x_axis_5 }}%;
          bottom: {{ block.settings.y_axis_5 }}%;
          visibility: hidden;
          "
        data-hotspot-x-axis="{{ block.settings.x_axis_5 }}"
        data-hotspot-y-axis="{{ block.settings.y_axis_5 }}"
        data-hotspot
        data-hotspot-product="{{ hotspot_product_5.id }}"
        aria-label="Product hotspot"
        tabindex=0
        {{ block.shopify_attributes }}
      >
        <div class="shoppable-image__hotspot-inner"></div>
        <div
          class="hotspot__tooltip-wrapper"
          data-tooltip-wrapper
          role="tooltip"
        >
          <a
            href="{{ hotspot_product_5.url }}"
            class="hotspot__tooltip"
            data-tooltip
            tabindex=0
          >
            {% if show_tooltip_image %}
              <div class="hotspot__tooltip-image-wrapper">
                {% if hotspot_product_5.featured_media.preview_image %}
                  {%
                    include 'rimg',
                    img: hotspot_product_5.featured_media.preview_image,
                    size: '800x',
                    class: 'tooltip__image',
                    crop: 'center',
                    lazy: true,
                    canvas: true
                  %}
                {% else %}
                  {{ 'product-1' | placeholder_svg_tag: 'tooltip__image tooltip__placeholder-image' }}
                {% endif %}
              </div>
            {% endif %}
    
            <div class="hotspot__tooltip-content">
              {% assign class_root = 'hotspot' %}
              {% if show_sale_badge %}
                <div class="hotspot__tooltip-sale">
                  {% assign product = hotspot_product_5 %}
                  {% assign sales_badge = true %}
                  {% comment %}Inject @pixelunion/shopify-price-ui/sale-badge begin{% endcomment %}
                  {% comment %}
                    @param product {Product}
                  
                    @param class_root {String}
                      Base class root
                  
                    @param price_varies {Boolean}
                      If true, the variant price varies
                  
                    @param compare_at_price_varies {Boolean}
                      If true, the variant compare price varies
                  
                    @param product_available {Boolean}
                  
                    @param on_sale {Boolean}
                      If a product, or one of it's variants is on sale
                  
                    @param sales_badge {Boolean}
                      False: Sold out badge only
                      True: Show sale badge
                  
                    @param sales_badge_style
                  
                    @param preorder_badge {Boolean}
                      If true, show the pre-order badge
                  
                    @param include_hidden_badge
                      Include a hidden element with sale data to use in cases of unavailable variants or cases where no variant
                      is selected by default
                  {% endcomment %}
                  
                  {% assign savings_money_range = 0 %}
                  {% assign savings_percentage_range = 0 %}
                  
                  {% assign price_min = nil %}
                  {% assign price_max = nil %}
                  {% assign compare_at_price_min = nil %}
                  {% assign compare_at_price_max = nil %}
                  {% assign price_varies = price_varies | default: false %}
                  {% assign compare_at_price_varies = compare_at_price_varies | default: false %}
                  
                  {% for variant in product.variants %}
                    {% if price_min == nil or variant.price < price_min %}
                      {% assign price_min = variant.price %}
                    {% endif %}
                    {% if price_max == nil or variant.price > price_max %}
                      {% assign price_max = variant.price %}
                    {% endif %}
                    {% assign tmp_compare_at_price = variant.compare_at_price %}
                    {% unless variant.compare_at_price %}
                      {% assign tmp_compare_at_price = variant.price %}
                    {% endunless %}
                    {% if compare_at_price_min == nil or tmp_compare_at_price < compare_at_price_min %}
                      {% assign compare_at_price_min = tmp_compare_at_price %}
                    {% endif %}
                    {% if compare_at_price_max == nil or tmp_compare_at_price > compare_at_price_max %}
                      {% assign compare_at_price_max = tmp_compare_at_price %}
                    {% endif %}
                  
                    {% assign price_difference = tmp_compare_at_price | minus: variant.price %}
                    {% if price_difference > savings_money_range %}
                      {% assign savings_money_range = price_difference %}
                      {% assign savings_percentage_range = savings_money_range | times: 1.0 | divided_by: variant.compare_at_price | times: 100.0 | round %}
                    {% endif %}
                  {% endfor %}
                  
                  {% assign savings_money_single = selected_variant.compare_at_price | minus: selected_variant.price %}
                  {% assign savings_percentage_single = savings_money_single | times: 1.0 | divided_by: selected_variant.compare_at_price | times: 100.0 | round %}
                  
                  {% assign product_available = product_available | default: product.available %}
                  
                  {%- if product_available != true -%}
                    <span class="{{ class_root }}__badge {{ class_root }}__badge--soldout">
                      {{ 'product_price.badge.sold_out' | t }}
                    </span>
                  {%- elsif on_sale and sales_badge -%}
                    {% assign on_sale = on_sale | default: true %}
                    {% assign saved_price_single = savings_money_single | money %}
                    {% assign saved_price_range = savings_money_range | money %}
                    {% if savings_money_range <= 0 %}
                      {% assign on_sale = false %}
                    {% endif %}
                  
                    <span class="{{ class_root }}__badge {{ class_root }}__badge--sale"
                      data-badge-sales
                      {% if on_sale != true %}style="display: none;"{% endif %}
                    >
                      <span data-badge-sales-range>
                        {% if sales_badge_style == 'percent' %}
                          {% if price_varies or compare_at_price_varies %}
                            {{ 'product_price.badge.sale_percentage_range_html' | t: savings: savings_percentage_range | strip_newlines }}
                          {% else %}
                            {{ 'product_price.badge.sale_percentage_single_html' | t: savings: savings_percentage_range | strip_newlines }}
                          {% endif %}
                        {% elsif sales_badge_style == 'money' %}
                          {% if price_varies or compare_at_price_varies %}
                            {{ 'product_price.badge.sale_money_range_html' | t: savings: saved_price_range | strip_newlines }}
                          {% else %}
                            {{ 'product_price.badge.sale_money_single_html' | t: savings: saved_price_range | strip_newlines }}
                          {% endif %}
                        {% else %}
                          {{ 'product_price.badge.sale' | t }}
                        {% endif %}
                      </span>
                      <span data-badge-sales-single style="display: none;">
                        {% if sales_badge_style == 'percent' %}
                          {{ 'product_price.badge.sale_percentage_single_html' | t: savings: savings_percentage_single | strip_newlines }}
                        {% elsif sales_badge_style == 'money' %}
                          {{ 'product_price.badge.sale_money_single_html' | t: savings: saved_price_single | strip_newlines }}
                        {% else %}
                          {{ 'product_price.badge.sale' | t }}
                        {% endif %}
                      </span>
                    </span>
                  {%- elsif preorder_badge -%}
                    <span class="{{ class_root }}__badge {{ class_root }}__badge--pre-order">
                      {{ 'product_price.badge.pre_order' | t }}
                    </span>
                  {%- endif -%}
                  {% comment %}Inject @pixelunion/shopify-price-ui/sale-badge end{% endcomment %}
    
                </div>
              {% endif %}
    
              <div class="hotspot__tooltip-title">
                {{ hotspot_product_5.title }}
              </div>
    
              {% if show_vendor %}
                <div class="hotspot__tooltip-vendor">
                  {{ hotspot_product_5.vendor }}
                </div>
              {% endif %}
    
              <div class="hotspot__tooltip-price">
                {% assign product = hotspot_product_5 %}
                {% assign selected_variant = product.selected_or_first_available_variant %}
                {% assign compare_at_price = selected_variant.compare_at_price %}
                {% assign price = selected_variant.price %}
    
                {% comment %}Inject @pixelunion/shopify-price-ui/price begin{% endcomment %}
                {% comment %}
                  @param class_root {String}
                    Base class root
                
                  @param show_range {Bool}
                    Show price range
                
                  @param price_varies {Boolean}
                    If true, the variant price varies
                
                  @param compare_at_price_varies {Boolean}
                    If true, the variant compare price varies
                
                  @param price_range_format {String}
                      'range' or 'from', defaults to 'range'
                
                  @param product {Product}
                      Product to reference for price
                
                  @param on_sale {Bool}
                    If a product, or one of it's variants is on sale
                
                  @param emphasize_price {Bool}
                    Used in product grid item to add placeholder space
                
                  @param show_original {Bool}
                    Show original price if is consistent across all variants
                
                  @param show_savings {Bool}
                    Line of text indicating maximum savings on sale items (ex. "Save up to 20%")
                
                  @param savings_format {String}
                    Percentage or money for show_savings line
                
                  @param include_spacer {Bool}
                    Include a spacer div above the price when emphasize price is enabled and there is no 'compare-at' price
                
                  @param include_unit_price
                    Include the unit price line
                
                  @param include_tax_line
                    Include tax line
                
                  @param include_hidden_price
                    Include a hidden element with price data to use in cases of unavailable variants or cases where no variant
                    is selected by default
                
                  @param include_compare_price
                    Show compare at price
                {% endcomment %}
                
                {% assign price_min = nil %}
                {% assign price_max = nil %}
                {% assign compare_at_price_min = nil %}
                {% assign compare_at_price_max = nil %}
                {% assign price_varies = price_varies | default: false %}
                {% assign compare_at_price_varies = compare_at_price_varies | default: false %}
                
                {% for variant in product.variants %}
                  {% if price_min == nil or variant.price < price_min %}
                    {% assign price_min = variant.price %}
                  {% endif %}
                  {% if price_max == nil or variant.price > price_max %}
                    {% assign price_max = variant.price %}
                  {% endif %}
                  {% assign tmp_compare_at_price = variant.compare_at_price %}
                  {% unless variant.compare_at_price %}
                    {% assign tmp_compare_at_price = variant.price %}
                  {% endunless %}
                  {% if compare_at_price_min == nil or tmp_compare_at_price < compare_at_price_min %}
                    {% assign compare_at_price_min = tmp_compare_at_price %}
                  {% endif %}
                  {% if compare_at_price_max == nil or tmp_compare_at_price > compare_at_price_max %}
                    {% assign compare_at_price_max = tmp_compare_at_price %}
                  {% endif %}
                {% endfor %}
                
                {% assign show_range = show_range | default: false %}
                {% assign price = price | default: product.price %}
                {% assign compare_at_price = compare_at_price | default: product.compare_at_price %}
                {% assign variants = product.variants %}
                {% assign price_range_format = price_range_format | default: 'range' %}
                {% assign savings_format = savings_format | default: 'percentage' %}
                {% assign on_sale = on_sale | default: false %}
                {% assign emphasize_price = emphasize_price | default: false %}
                {% assign show_original = show_original | default: false %}
                {% assign show_savings = show_savings | default: false %}
                {% assign class_root = class_root | default: 'product' %}
                {% assign include_spacer = include_spacer | default: false %}
                {% assign include_unit_price = include_unit_price | default: false %}
                {% assign include_tax_line = include_tax_line | default: false %}
                {% assign include_compare_price = include_compare_price | default: true %}
                
                <div class="price {{ class_root }}__price {% if compare_at_price_varies %}price--varies{% endif %}">
                  {% if include_compare_price %}
                    <div
                      class="price__compare-at {% if emphasize_price or on_sale and show_original %}visible{% endif %}"
                      data-price-compare-container
                    >
                      {%- capture compare_at_price_html -%}
                        <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                        <span class="money price__compare-at--single" data-price-compare>
                          {{ compare_at_price | money }}
                        </span>
                      {%- endcapture -%}
                
                      {% if compare_at_price_varies %}
                        {%- capture compare_at_price_range_html -%}
                          {% if price_range_format == 'range' %}
                            <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                            <span class="money price__compare-at--min" data-price-compare-min>
                              {{ compare_at_price_min | money }}
                            </span>
                            -
                            <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                            <span class="money price__compare-at--max" data-price-compare-max>
                              {{ compare_at_price_max | money }}
                            </span>
                          {% else %}
                            {{ 'product_price.item.price.range_html' | t: price: compare_at_price_html | strip_newlines }}
                          {% endif %}
                        {% endcapture %}
                      {% endif %}
                
                      {% if compare_at_price_varies and on_sale and show_original and show_range %}
                        {{ compare_at_price_range_html }}
                      {% elsif on_sale and show_original %}
                        {{ compare_at_price_html }}
                      {% elsif emphasize_price and include_spacer %}
                        <span class="price__spacer"></span>
                      {% elsif show_original %}
                        <span class="money price__original" data-price-original></span>
                      {% endif %}
                    </div>
                
                
                    {% if include_hidden_price %}
                      {% comment %}
                        Hide an element containing compare at price info to fill in the price when no variant is selected
                      {% endcomment %}
                      <div class="price__compare-at--hidden" data-compare-price-range-hidden>
                        {% if price_range_format == 'range' %}
                          <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                          <span class="money price__compare-at--min" data-price-compare-min>
                            {{ compare_at_price_min | money }}
                          </span>
                          -
                          <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                          <span class="money price__compare-at--max" data-price-compare-max>
                            {{ compare_at_price_max | money }}
                          </span>
                        {% else %}
                          {{ 'product_price.item.price.range_html' | t: price: compare_at_price_html | strip_newlines }}
                        {% endif %}
                      </div>
                      <div class="price__compare-at--hidden" data-compare-price-hidden>
                        <span class="visually-hidden">{{ 'product_price.price.original' | t }}</span>
                        <span class="money price__compare-at--single" data-price-compare>
                          {{ compare_at_price | money }}
                        </span>
                      </div>
                    {% endif %}
                  {% endif %}
                
                  <div class="price__current {% if emphasize_price %}price__current--emphasize{% endif %} {% if on_sale %}price__current--on-sale{% endif %}" data-price-container>
                    {%- capture price_html -%}
                      <span class="money" data-price>
                        {{ price | money }}
                      </span>
                    {%- endcapture -%}
                
                    {% capture current_price_range_html %}
                      {% if price_varies %}
                        {% if price_range_format == 'range' %}
                          <span class="money price__current--min" data-price-min>{{ price_min | money}}</span>
                          -
                          <span class="money price__current--max" data-price-max>{{ price_max | money }}</span>
                        {% else %}
                          {{ 'product_price.price.range_html' | t: price: price_html | strip_newlines }}
                        {% endif %}
                      {% endif %}
                    {% endcapture %}
                
                    {% capture current_price_html %}
                      {% if on_sale and show_original %}
                        <span class="visually-hidden">{{ 'product_price.price.current' | t }}</span>
                      {% endif %}
                      {{ price_html }}
                    {% endcapture %}
                
                    {% if show_range and price_varies %}
                      {{ current_price_range_html }}
                    {% else %}
                      {{ current_price_html }}
                    {% endif %}
                  </div>
                
                  {% if include_hidden_price %}
                    {% comment %}
                      Hide an element containing current price info to fill in the price when no variant is selected
                    {% endcomment %}
                    <div class="price__current--hidden" data-current-price-range-hidden>
                      {% if price_range_format == 'range' %}
                        <span class="money price__current--min" data-price-min>{{ price_min | money}}</span>
                        -
                        <span class="money price__current--max" data-price-max>{{ price_max | money }}</span>
                      {% else %}
                        {{ 'product_price.price.range_html' | t: price: price_html | strip_newlines }}
                      {% endif %}
                    </div>
                    <div class="price__current--hidden" data-current-price-hidden>
                      <span class="visually-hidden">{{ 'product_price.price.current' | t }}</span>
                      {{ price_html }}
                    </div>
                  {% endif %}
                
                  {% if include_unit_price %}
                    {% assign variant = product.selected_or_first_available_variant %}
                    {% capture total_quantity %}<span class="{{ class_root }}__total-quantity" data-total-quantity>{{ variant.unit_price_measurement.quantity_value }}{{ variant.unit_price_measurement.quantity_unit }}</span>{% endcapture %}
                    {% capture unit_price %}<span class="{{ class_root }}__unit-price--amount money" data-unit-price-amount>{{ variant.unit_price | money }}</span>{% endcapture %}
                    {% capture unit_measure %}<span class="{{ class_root }}__unit-price--measure" data-unit-price-measure>{%- if variant.unit_price_measurement.reference_value != 1 -%}{{ variant.unit_price_measurement.reference_value }}{%- endif %}{{ variant.unit_price_measurement.reference_unit }}</span>{% endcapture %}
                
                    <div
                      class="
                        {{ class_root }}__unit-price
                        {% unless variant.unit_price_measurement %}hidden{% endunless %}
                      "
                      data-unit-price
                    >
                      {{ 'product_price.price.price_per_unit_html' | t: total_quantity: total_quantity, unit_price: unit_price, unit_measure: unit_measure | strip_newlines }}
                    </div>
                  {% endif %}
                
                  {% if include_tax_line %}
                    {%- capture tax_text -%}
                      {{ 'product_price.price.tax_line_html' | t }}
                    {%- endcapture -%}
                
                    {%- if tax_text != blank and class_root != 'productitem' -%}
                      <div class="
                          {{ class_root }}__tax
                          {% unless variant.taxable %}hidden{% endunless %}
                        "
                        data-tax-line
                      >
                        {{ tax_text }}
                      </div>
                    {%- endif -%}
                  {% endif %}
                </div>
                {% comment %}Inject @pixelunion/shopify-price-ui/price end{% endcomment %}
    
              </div>
    
              {% if tooltip_link_text != blank %}
                <div class="hotspot__tooltip-link">
                  {{ tooltip_link_text }}
                </div>
              {% endif %}
            </div>
          </a>
        </div>
      </div>
    {% endif %}
    
    
      </div>
      {% if enable_text_box %}
        <div class="shoppable-image__text-box-wrapper {{ text_box_root_class }}">
          <div class="shoppable-image__text-box-content">
            {% if text_box_heading != blank %}
              <h2 class="shoppable-image__text-box-title">{{ text_box_heading }}</h2>
            {% endif %}
            {% if text_box_subheading != blank %}
              <div class="shoppable-image__text-box-subheading">{{ text_box_subheading }}</div>
            {% endif %}
            {% if text_box_button_link != blank or text_box_button_label != blank %}
              <a href="{{ text_box_button_link }}" class="shoppable-image__text-box-button {{ text_box_button_class }}" data-shoppable-image-textbox-link>{{ text_box_button_label }}</a>
            {% endif %}
          </div>
        </div>
      </div> {% comment %} content wrapper div only exists when text box is enabled {% endcomment %}
      {% endif %}
    </div>
    {% comment %}Inject @pixelunion/pxs-shoppable-image/dynamic-shoppable-image end{% endcomment %}
    
    

  </div>

    {% endfor %}
  </div>

</section>

{% schema %}
{
  "name": "Shoppable Images",
  "class": "shoppable-image--section index-section",
  "max_blocks": 5,
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Shoppable image"
    }
  ],
  "blocks": [
      {
        "type": "hotspot",
        "name": "Image",
        "settings": [
          {
            "type": "text",
            "id": "title",
            "label": "Title",
            "default": "Shoppable image"
          },
          {
            "type": "image_picker",
            "id": "image",
            "label": "t:sections.shoppable_image.image.label"
          },
          {
            "type": "select",
            "id": "image_width",
            "label": "t:sections.shoppable_image.image_width.label",
            "options": [
              {
                "value": "half",
                "label": "t:sections.shoppable_image.image_width.option_1"
              },
              {
                "value": "two-thirds",
                "label": "t:sections.shoppable_image.image_width.option_2"
              },
              {
                "value": "full",
                "label": "t:sections.shoppable_image.image_width.option_3"
              }
            ],
            "default": "two-thirds"
          },
          {
            "type": "text",
            "id": "link_text",
            "label": "t:sections.shoppable_image.link_text.label",
            "default": "View product"
          },
          {
            "type": "header",
            "content": "t:sections.shoppable_image.header_1.content"
          },
          {
            "type": "text",
            "id": "textbox_title",
            "label": "t:sections.shoppable_image.textbox_title.label",
            "default": "Shop the look"
          },
          {
            "type": "richtext",
            "id": "textbox_subheading",
            "label": "t:sections.shoppable_image.textbox_subheading.label",
            "default": "<p>Make an image shoppable by adding hotspots that link to various products.</p>"
          },
          {
            "type": "text",
            "id": "textbox_button_label",
            "label": "t:sections.shoppable_image.textbox_button_label.label",
            "default": "Button"
          },
          {
            "type": "url",
            "id": "textbox_button_link",
            "label": "t:sections.shoppable_image.textbox_button_link.label"
          },
          {
            "type": "select",
            "id": "textbox_button_style",
            "label": "t:sections.shoppable_image.textbox_button_style.label",
            "options": [
              {
                "value": "primary",
                "label": "t:sections.shoppable_image.textbox_button_style.option_1"
              },
              {
                "value": "secondary",
                "label": "t:sections.shoppable_image.textbox_button_style.option_2"
              }
            ],
            "default": "primary"
          },
          {
            "type": "select",
            "id": "textbox_text_alignment",
            "label": "t:sections.shoppable_image.textbox_text_alignment.label",
            "options": [
              {
                "value": "left",
                "label": "t:sections.shoppable_image.textbox_text_alignment.option_1"
              },
              {
                "value": "center",
                "label": "t:sections.shoppable_image.textbox_text_alignment.option_2"
              },
              {
                "value": "right",
                "label": "t:sections.shoppable_image.textbox_text_alignment.option_3"
              }
            ],
            "default": "left"
          },
          {
            "type": "select",
            "id": "textbox_text_position",
            "label": "t:sections.shoppable_image.textbox_text_position.label",
            "options": [
              {
                "value": "left",
                "label": "t:sections.shoppable_image.textbox_text_position.option_1"
              },
              {
                "value": "right",
                "label": "t:sections.shoppable_image.textbox_text_position.option_2"
              }
            ],
            "default": "right",
            "info": "t:sections.shoppable_image.textbox_text_position.info"
          },
          {
            "type": "product",
            "id": "product_1",
            "label": "Product 1"
          },
          {
            "type": "range",
            "id": "x_axis_1",
            "label": "t:sections.shoppable_image.blocks.product.x_axis.label",
            "min": 0,
            "max": 100,
            "step": 1,
            "unit": "%",
            "default": 50
          },
          {
            "type": "range",
            "id": "y_axis_1",
            "label": "t:sections.shoppable_image.blocks.product.y_axis.label",
            "min": 0,
            "max": 100,
            "step": 1,
            "unit": "%",
            "default": 50
          },
          {
            "type": "product",
            "id": "product_2",
            "label": "Product 2"
          },
          {
            "type": "range",
            "id": "x_axis_2",
            "label": "t:sections.shoppable_image.blocks.product.x_axis.label",
            "min": 0,
            "max": 100,
            "step": 1,
            "unit": "%",
            "default": 50
          },
          {
            "type": "range",
            "id": "y_axis_2",
            "label": "t:sections.shoppable_image.blocks.product.y_axis.label",
            "min": 0,
            "max": 100,
            "step": 1,
            "unit": "%",
            "default": 50
          },
          {
            "type": "product",
            "id": "product_3",
            "label": "Product 3"
          },
          {
            "type": "range",
            "id": "x_axis_3",
            "label": "t:sections.shoppable_image.blocks.product.x_axis.label",
            "min": 0,
            "max": 100,
            "step": 1,
            "unit": "%",
            "default": 50
          },
          {
            "type": "range",
            "id": "y_axis_3",
            "label": "t:sections.shoppable_image.blocks.product.y_axis.label",
            "min": 0,
            "max": 100,
            "step": 1,
            "unit": "%",
            "default": 50
          },
          {
            "type": "product",
            "id": "product_4",
            "label": "Product 4"
          },
          {
            "type": "range",
            "id": "x_axis_4",
            "label": "t:sections.shoppable_image.blocks.product.x_axis.label",
            "min": 0,
            "max": 100,
            "step": 1,
            "unit": "%",
            "default": 50
          },
          {
            "type": "range",
            "id": "y_axis_4",
            "label": "t:sections.shoppable_image.blocks.product.y_axis.label",
            "min": 0,
            "max": 100,
            "step": 1,
            "unit": "%",
            "default": 50
          },
          {
            "type": "product",
            "id": "product_5",
            "label": "Product 5"
          },
          {
            "type": "range",
            "id": "x_axis_5",
            "label": "t:sections.shoppable_image.blocks.product.x_axis.label",
            "min": 0,
            "max": 100,
            "step": 1,
            "unit": "%",
            "default": 50
          },
          {
            "type": "range",
            "id": "y_axis_5",
            "label": "t:sections.shoppable_image.blocks.product.y_axis.label",
            "min": 0,
            "max": 100,
            "step": 1,
            "unit": "%",
            "default": 50
          }
        ]
      }
   
  ],
  "presets": [
    {
      "name": "Shoppable Images",
      "category": "t:sections.shoppable_image.presets.shoppable_image.category"
    }
  ]
}
{% endschema %}